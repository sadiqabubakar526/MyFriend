{"version":3,"sources":["components/LoginForm.js","components/MyMessage.js","components/TheirMessage.js","components/MessageForm.js","components/ChatFeed.js","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MyMessage","message","attachments","length","src","file","alt","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","userName","backgroundImage","avatar","marginLeft","MessageForm","props","setValue","chatId","creds","event","trim","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a84369d.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst projectID = '2dfb5b0e-fd88-4e2b-8d41-0ac131dbcc16';\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Oops, incorrect credentials.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LoginForm;","const MyMessage = ({ message }) => {\r\n  if (message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachment\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: \"18px\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3B2A50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;\r\n","const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.userName !== message.sender.userName;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{\r\n            float: \"right\",\r\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            backgroundColor: \"#a49aa8\",\r\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default TheirMessage;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\nimport '../styles/App.css'\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { chatId, creds } = props;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const text = value.trim();\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    isTyping(props, chatId);\r\n  };\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      ></input>\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import MyMessage from \"./MyMessage\";\r\n// import TheirMessage from \"./TheirMessage\";\r\n// import MessageForm from \"./MessageForm\";\r\n// import \"../styles/App.css\";\r\n\r\n// const ChatFeed = (props) => {\r\n//   const { chats, activeChat, userName, messages } = props;\r\n\r\n//   const chat = chats && chats[activeChat];\r\n\r\n//   const renderReadReceipts=(message,isMyMessage)=>{\r\n//     //console.log(\"id=\",message.id);\r\n//     return chat.people.map((person,index)=>{\r\n//    // console.log(\"in map:  \",person.last_read);\r\n//     person.last_read === message.id&&(\r\n//       <div\r\n//         key={`read_${index}`}\r\n//         className='read-receipt'\r\n//         style={{\r\n//           float:isMyMessage?'right':'left',\r\n//           backgroundImage: `url(${person.person.avatar})`\r\n//         }}\r\n//       />\r\n    \r\n//     )})\r\n    \r\n    \r\n//     //  console.log(chat.people[0].last_read)\r\n//   }\r\n\r\n//   const renderMessages = () => {\r\n//     const keys = Object.keys(messages);\r\n//     return keys.map((key, index) => {\r\n//       const message = messages[key];\r\n\r\n//       const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n\r\n//       const isMyMessage = userName === message.sender.username;\r\n\r\n//       return (\r\n//         <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n//           <div className=\"message-block\">\r\n//             {isMyMessage ? (\r\n//               <MyMessage message={message} />\r\n//             ) : (\r\n//               <TheirMessage\r\n//                 message={message}\r\n//                 lastMessage={messages[lastMessageKey]}\r\n//               />\r\n//             )}\r\n//           </div>\r\n//           <div\r\n//             className=\"read-receipts\"\r\n//             style={{\r\n//               marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n//               marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n//             }}\r\n//           >\r\n//             {renderReadReceipts(message,isMyMessage)}\r\n//           </div>\r\n//         </div>\r\n//       );\r\n//     });\r\n//   };\r\n \r\n//   if (!chat) return \"Loading...\";\r\n//   return (\r\n//     <div className=\"chat-feed\">\r\n//       <div className=\"chat-title-container\">\r\n//         <div className=\"chat-title\">{chat?.title}</div>\r\n//         <div className=\"chat-subtitle\">\r\n//           {chat.people.map(\r\n//             (person) => `${person.person.username}`\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       {renderMessages()}\r\n//       <div style={{ height: \"100px\" }}></div>\r\n//       <div className=\"message-form-container\">\r\n//         <MessageForm {...props} chatId={activeChat} />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChatFeed;\r\n","import { ChatEngine } from \"react-chat-engine\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport \"./styles/App.css\";\r\nimport ChatFeed from \"./components/ChatFeed\";\r\n\r\nconst projectID = \"2dfb5b0e-fd88-4e2b-8d41-0ac131dbcc16\";\r\n\r\nconst App = () => {\r\n  if (!localStorage.getItem(\"username\")) return <LoginForm />;\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID={projectID}\r\n      userName={localStorage.getItem('username')}\r\n      userSecret={localStorage.getItem('password')}\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}